/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz;

import logica.MemoriaVirtual;
import logica.Proceso;
import java.util.LinkedList;
import java.util.Queue;

/**
 *
 * @author Aran_
 */
public class Interfaz extends javax.swing.JFrame {

    /**
     * Creates new form Interfaz
     */
    private MemoriaVirtual memoriaVirtual;
    private Proceso procesos[];
    private int contadorProceso = 0;
    private Queue<Integer> colaProcesos;

    public Interfaz() {
        initComponents();
        this.idProceso.setEditable(false);
        this.ponerProcesoListo.setEnabled(false);
        this.eliminarProceso.setEnabled(false);
        this.bloquearProceso.setEnabled(false);
        this.suspenderProceso.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane5 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        labelTituloInformacion = new javax.swing.JLabel();
        tamMemoriaP = new javax.swing.JTextField();
        labelTamMP = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        tamMemoriaS = new javax.swing.JTextField();
        labelTamPagina = new javax.swing.JLabel();
        tamPag = new javax.swing.JTextField();
        establecer = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        labelInformacionGeneral = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        labelTamMemoriaP = new javax.swing.JLabel();
        labelMemoriaPD = new javax.swing.JLabel();
        labelMemoriaPU = new javax.swing.JLabel();
        labelCantProcesos = new javax.swing.JLabel();
        labelCantMarcosP = new javax.swing.JLabel();
        labelTamPag = new javax.swing.JLabel();
        labelTamMemoriaS = new javax.swing.JLabel();
        labelMemoriaSD = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        labelGestionarP = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        labelCrearP = new javax.swing.JLabel();
        labelNombreProceso = new javax.swing.JLabel();
        nombreProceso = new javax.swing.JTextField();
        labelTamañoProceso = new javax.swing.JLabel();
        tamProceso = new javax.swing.JTextField();
        crearProceso = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        labelEBSP = new javax.swing.JLabel();
        idProceso = new javax.swing.JTextField();
        eliminarProceso = new javax.swing.JButton();
        bloquearProceso = new javax.swing.JButton();
        suspenderProceso = new javax.swing.JButton();
        buscarProceso = new javax.swing.JButton();
        ponerProcesoListo = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        cajaMensajes = new javax.swing.JTextArea();
        labelTituloInformacion1 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        labelGestionarP1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        cajaMemoriaPrincipal = new javax.swing.JTextArea();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        cajaMemoriaSecundaria = new javax.swing.JTextArea();
        labelGestionarP2 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        labelGestionarP3 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        cajaProcesos = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(167, 204, 168));

        jPanel2.setBackground(new java.awt.Color(16, 99, 75));

        labelTituloInformacion.setForeground(new java.awt.Color(255, 255, 255));
        labelTituloInformacion.setText("INFORMACIÓN DE INICIO");

        tamMemoriaP.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        labelTamMP.setForeground(new java.awt.Color(255, 255, 255));
        labelTamMP.setText("Tamaño de la memoria principal:");

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Tamaño de la memoria secundaria:");

        tamMemoriaS.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        labelTamPagina.setForeground(new java.awt.Color(255, 255, 255));
        labelTamPagina.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTamPagina.setText("Tamaño de las páginas:");

        tamPag.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        establecer.setText("ESTABLECER");
        establecer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                establecerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelTamMP)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(tamMemoriaP)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tamMemoriaS)
                        .addComponent(labelTamPagina, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tamPag)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(establecer)
                        .addGap(85, 85, 85))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(labelTituloInformacion)
                        .addGap(68, 68, 68))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelTituloInformacion)
                .addGap(18, 18, 18)
                .addComponent(labelTamMP)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tamMemoriaP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tamMemoriaS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(labelTamPagina)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tamPag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(establecer)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(16, 99, 75));

        labelInformacionGeneral.setForeground(new java.awt.Color(255, 255, 255));
        labelInformacionGeneral.setText("INFORMACIÓN GENERAL");

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Tamaño de la memoria principal:");

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Memoria principal disponible:");

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Memoria principal usada:");

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Cantidad de procesos:");

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Cantidad de marcos de página");

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Tamaño de página:");

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Tamaño de la memoria secundaria:");

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Memoria secundaria disponible:");

        labelTamMemoriaP.setForeground(new java.awt.Color(255, 255, 255));
        labelTamMemoriaP.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelTamMemoriaP.setText("X");

        labelMemoriaPD.setForeground(new java.awt.Color(255, 255, 255));
        labelMemoriaPD.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelMemoriaPD.setText("X");

        labelMemoriaPU.setForeground(new java.awt.Color(255, 255, 255));
        labelMemoriaPU.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelMemoriaPU.setText("X");

        labelCantProcesos.setForeground(new java.awt.Color(255, 255, 255));
        labelCantProcesos.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelCantProcesos.setText("X");

        labelCantMarcosP.setForeground(new java.awt.Color(255, 255, 255));
        labelCantMarcosP.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelCantMarcosP.setText("X");

        labelTamPag.setForeground(new java.awt.Color(255, 255, 255));
        labelTamPag.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelTamPag.setText("X");

        labelTamMemoriaS.setForeground(new java.awt.Color(255, 255, 255));
        labelTamMemoriaS.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelTamMemoriaS.setText("X");

        labelMemoriaSD.setForeground(new java.awt.Color(255, 255, 255));
        labelMemoriaSD.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelMemoriaSD.setText("X");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelMemoriaSD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelTamMemoriaS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelTamPag, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelCantMarcosP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelCantProcesos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelMemoriaPU, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelMemoriaPD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelTamMemoriaP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(labelInformacionGeneral)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelInformacionGeneral)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(labelTamMemoriaP))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(labelMemoriaPD))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(labelMemoriaPU))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(labelCantProcesos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(labelCantMarcosP))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(labelTamPag))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(labelTamMemoriaS))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(labelMemoriaSD))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(16, 99, 75));

        labelGestionarP.setForeground(new java.awt.Color(255, 255, 255));
        labelGestionarP.setText("GESTIONAR PROCESOS");

        jPanel5.setBackground(new java.awt.Color(16, 99, 75));
        jPanel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray));

        labelCrearP.setForeground(new java.awt.Color(255, 255, 255));
        labelCrearP.setText("CREAR PROCESO");

        labelNombreProceso.setForeground(new java.awt.Color(255, 255, 255));
        labelNombreProceso.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelNombreProceso.setText("Nombre del proceso:");

        nombreProceso.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        nombreProceso.setToolTipText("");

        labelTamañoProceso.setForeground(new java.awt.Color(255, 255, 255));
        labelTamañoProceso.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTamañoProceso.setText("Tamaño del proceso:");

        tamProceso.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        crearProceso.setText("CREAR");
        crearProceso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crearProcesoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(78, 78, 78)
                                .addComponent(labelCrearP))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(71, 71, 71)
                                .addComponent(nombreProceso, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelNombreProceso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelTamañoProceso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tamProceso)
                    .addComponent(crearProceso, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelCrearP)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelNombreProceso)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nombreProceso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelTamañoProceso)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tamProceso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(crearProceso)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(16, 99, 75));
        jPanel6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray));

        labelEBSP.setForeground(new java.awt.Color(255, 255, 255));
        labelEBSP.setText("ADMINISTRAR PROCESOS");

        idProceso.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        eliminarProceso.setText("ELIMINAR");
        eliminarProceso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarProcesoActionPerformed(evt);
            }
        });

        bloquearProceso.setText("BLOQUEAR");
        bloquearProceso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bloquearProcesoActionPerformed(evt);
            }
        });

        suspenderProceso.setText("SUSPENDER");
        suspenderProceso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suspenderProcesoActionPerformed(evt);
            }
        });

        buscarProceso.setText("BUSCAR");
        buscarProceso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarProcesoActionPerformed(evt);
            }
        });

        ponerProcesoListo.setText("PONER LISTO");
        ponerProcesoListo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ponerProcesoListoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(labelEBSP)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(idProceso)
                            .addComponent(buscarProceso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ponerProcesoListo, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bloquearProceso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(eliminarProceso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(suspenderProceso, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelEBSP)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idProceso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eliminarProceso))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bloquearProceso)
                    .addComponent(buscarProceso))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(suspenderProceso)
                    .addComponent(ponerProcesoListo))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(labelGestionarP)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelGestionarP)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel7.setBackground(new java.awt.Color(16, 99, 75));

        cajaMensajes.setColumns(20);
        cajaMensajes.setRows(5);
        jScrollPane1.setViewportView(cajaMensajes);

        labelTituloInformacion1.setForeground(new java.awt.Color(255, 255, 255));
        labelTituloInformacion1.setText("CAJA DE MENSAJES");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addComponent(labelTituloInformacion1)
                        .addGap(91, 91, 91))))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelTituloInformacion1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel8.setBackground(new java.awt.Color(16, 99, 75));
        jPanel8.setPreferredSize(new java.awt.Dimension(186, 127));

        labelGestionarP1.setForeground(new java.awt.Color(255, 255, 255));
        labelGestionarP1.setText("MEMORIA PRINCIPAL");

        cajaMemoriaPrincipal.setColumns(20);
        cajaMemoriaPrincipal.setRows(5);
        jScrollPane2.setViewportView(cajaMemoriaPrincipal);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(labelGestionarP1)
                        .addGap(0, 428, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelGestionarP1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel9.setBackground(new java.awt.Color(16, 99, 75));

        cajaMemoriaSecundaria.setColumns(20);
        cajaMemoriaSecundaria.setRows(5);
        jScrollPane3.setViewportView(cajaMemoriaSecundaria);

        labelGestionarP2.setForeground(new java.awt.Color(255, 255, 255));
        labelGestionarP2.setText("MEMORIA SECUNDARIA");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(labelGestionarP2)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelGestionarP2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );

        jPanel10.setBackground(new java.awt.Color(16, 99, 75));
        jPanel10.setPreferredSize(new java.awt.Dimension(136, 127));

        labelGestionarP3.setForeground(new java.awt.Color(255, 255, 255));
        labelGestionarP3.setText("PROCESOS");

        jScrollPane4.setPreferredSize(new java.awt.Dimension(100, 94));

        cajaProcesos.setColumns(20);
        cajaProcesos.setRows(5);
        jScrollPane4.setViewportView(cajaProcesos);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(labelGestionarP3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelGestionarP3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, 552, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, 552, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jScrollPane5.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 847, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 675, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void establecerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_establecerActionPerformed
        try {
            int tamañoMemoria = Integer.parseInt(this.tamMemoriaP.getText());
            int tamañoSecundario = Integer.parseInt(this.tamMemoriaS.getText());
            int tamañoPagina = Integer.parseInt(this.tamPag.getText());
            if ((tamañoMemoria % 2) == 0 && (tamañoSecundario % 2) == 0 && (tamañoPagina % 2) == 0) {
                if (tamañoMemoria > tamañoPagina) {
                    this.memoriaVirtual = new MemoriaVirtual(tamañoMemoria, tamañoSecundario, tamañoPagina, this.cajaMensajes);
                } else {
                    this.cajaMensajes.append("El tamano de las paginas no puede ser mayor que el tamano de la memoria principal\n");
                }
            } else {
                this.cajaMensajes.append("Los tamanos de las paginas, de la memoria principal y de la memoria secundaria deben ser potencias de 2\n");
            }
            this.colaProcesos = new LinkedList();
            this.procesos = new Proceso[memoriaVirtual.getMaximasPaginas()];
            this.establecer.setEnabled(false);
            this.labelTamMemoriaP.setText(Integer.toString(tamañoMemoria));
            this.labelMemoriaPD.setText(Integer.toString(tamañoMemoria));
            this.labelMemoriaPU.setText("0");
            this.labelCantProcesos.setText("0");
            this.labelCantMarcosP.setText(Integer.toString(memoriaVirtual.getCantidadMarcos()));
            this.labelTamPag.setText(Integer.toString(tamañoPagina));
            this.labelMemoriaSD.setText(Integer.toString(memoriaVirtual.getMemoriaSecundaria()));
            this.labelTamMemoriaS.setText(Integer.toString(memoriaVirtual.getMemoriaSecundariaTotal()));
            this.crearProceso.setEnabled(true);
            this.cajaMensajes.append("La simulacion de memoria virtual ha comenzado exitosamente\n");
            actualizarMemoriaPrincipal();
            actualizarMemoriaSecundaria();
            this.idProceso.setEditable(true);
        } catch (Exception e) {
            this.cajaMensajes.append("El tamano de la memoria principal, secundaria y de las paginas debe ser expresado en numero enteros\n");
        }


    }//GEN-LAST:event_establecerActionPerformed

    private void crearProcesoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crearProcesoActionPerformed

        try {
            if (!"".equals(this.nombreProceso.getText()) && !"".equals(this.tamProceso.getText())) {
                String nombreProceso = this.nombreProceso.getText();
                int tamañoProceso = Integer.parseInt(this.tamProceso.getText());
                if (tamañoProceso > 0) {
                    if (tamañoProceso <= (memoriaVirtual.getMemoriaPrincipal() + memoriaVirtual.getMemoriaSecundaria())) {

                        this.procesos[contadorProceso] = new Proceso(contadorProceso, nombreProceso, tamañoProceso, memoriaVirtual.getTamañoPagina());
                        moverFromMemoriaToAlmacenamiento(contadorProceso);
                        this.memoriaVirtual.agregarProceso(this.procesos[contadorProceso]);
                        this.cajaMensajes.append("- Se ha creado un proceso de un tamaño " + tamañoProceso + ", su id es '" + contadorProceso + "', y el numero de paginas que posee son " + tamañoProceso / memoriaVirtual.getTamañoPagina() + "\n");
                        this.colaProcesos.add(this.procesos[contadorProceso].getIdProceso());
                        contadorProceso++;
                        this.labelCantProcesos.setText(Integer.toString(contadorProceso));
                        this.nombreProceso.setText("Proceso " + contadorProceso);
                        actualizar();

                    } else {
                        this.cajaMensajes.append("* ALERTA: No hay suficiente espacio en la memoria principal ni en la memoria secundaria para crear el proceso.\n");
                    }
                }else{
                    this.cajaMensajes.append("* ALERTA: El tamaño del proceso debe ser mayor que cero (0)\n");
                }
            } else {
                this.cajaMensajes.append("* ALERTA: Recuerde que todos los campos son requeridos para poder continuar\n");
            }
        } catch (Exception e) {
            this.cajaMensajes.append("* ALERTA: Datos invalidos \n");
        }

    }//GEN-LAST:event_crearProcesoActionPerformed

    private void bloquearProcesoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bloquearProcesoActionPerformed
        try {
            int idProceso = Integer.parseInt(this.idProceso.getText());
            if (procesos[idProceso] != null) {
                //if (procesos[idProceso].getEstado() == "Suspendido/Bloqueado") {
                if (memoriaVirtual.getMemoriaPrincipal() + memoriaVirtual.getMemoriaSecundaria() != 0) {
                    moverFromMemoriaToAlmacenamiento(idProceso);
                    memoriaVirtual.listoProceso(procesos[idProceso]);
                    this.bloquearProceso.setEnabled(false);
                    this.suspenderProceso.setEnabled(true);
                    this.ponerProcesoListo.setEnabled(true);
                    actualizar();
                }
                //}
                procesos[idProceso].setEstado("Bloqueado");
                actualizar();
            } else {
                this.cajaMensajes.append("* ALERTA: No se encontró ningún proceso con dicho ID\n");
            }
        } catch (Exception e) {
            this.cajaMensajes.append("* ALERTA: Datos invalidos\n");
            this.idProceso.setText("");
        }
    }//GEN-LAST:event_bloquearProcesoActionPerformed

    private void eliminarProcesoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarProcesoActionPerformed
        try {
            int idProceso = Integer.parseInt(this.idProceso.getText());
            if (procesos[idProceso] != null) {
                memoriaVirtual.eliminarProceso(procesos[idProceso]);
                this.suspenderProceso.setEnabled(false);
                this.ponerProcesoListo.setEnabled(false);
                this.eliminarProceso.setEnabled(false);
                this.bloquearProceso.setEnabled(false);
                actualizar();
            } else {
                this.cajaMensajes.append("* ALERTA: No se encontró ningún proceso con dicho ID\n");
            }
        } catch (Exception e) {
            this.cajaMensajes.append("* ALERTA: Datos invalidos\n");
            this.idProceso.setText("");
        }
    }//GEN-LAST:event_eliminarProcesoActionPerformed

    private void ponerProcesoListoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ponerProcesoListoActionPerformed
        int idProceso = Integer.parseInt(this.idProceso.getText());
        if (procesos[idProceso].getEstado() != "Bloqueado") {
            if (memoriaVirtual.getMemoriaPrincipal() + memoriaVirtual.getMemoriaSecundaria() != 0) {
                moverFromMemoriaToAlmacenamiento(idProceso);
                memoriaVirtual.listoProceso(procesos[idProceso]);
                ponerProcesoListo.setEnabled(false);
                this.suspenderProceso.setEnabled(true);
                this.bloquearProceso.setEnabled(true);
                actualizar();
            } else {
                this.cajaMensajes.append("* ALERTA: No hay espacio en memoria principal ni en memoria secundaria\n");
            }
        } else {
            procesos[idProceso].setEstado("Listo");
            actualizar();
        }
    }//GEN-LAST:event_ponerProcesoListoActionPerformed

    private void buscarProcesoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarProcesoActionPerformed

        try {

            if (!"".equals(this.idProceso.getText())) {
                int idProceso = Integer.parseInt(this.idProceso.getText());
                String estado = procesos[idProceso].getEstado();
                eliminarProceso.setEnabled(true);
                if (estado == "Listo" || estado == "Activo") {
                    this.ponerProcesoListo.setEnabled(false);
                    this.suspenderProceso.setEnabled(true);
                    this.bloquearProceso.setEnabled(true);
                } else if (estado == "Suspendido") {
                    this.suspenderProceso.setEnabled(false);
                    this.ponerProcesoListo.setEnabled(true);
                    this.bloquearProceso.setEnabled(false);
                } else if (estado == "Bloqueado") {
                    this.bloquearProceso.setEnabled(false);
                    this.suspenderProceso.setEnabled(true);
                    this.ponerProcesoListo.setEnabled(true);
                } else if (estado == "Eliminado") {
                    this.suspenderProceso.setEnabled(false);
                    this.ponerProcesoListo.setEnabled(false);
                    this.eliminarProceso.setEnabled(false);
                    this.bloquearProceso.setEnabled(false);
                }
            } else {
                this.cajaMensajes.append("* ALERTA: Recuerde que todos los campos son requeridos para poder continuar \n");
            }

        } catch (Exception e) {
            this.cajaMensajes.append("* ALERTA: No se encontró ningún proceso con dicho id \n");
        }

    }//GEN-LAST:event_buscarProcesoActionPerformed

    private void suspenderProcesoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suspenderProcesoActionPerformed
        int idProceso = Integer.parseInt(this.idProceso.getText());
        if (memoriaVirtual.getContadorDisponiblesAlmacenamiento() >= procesos[idProceso].getPaginasMemoriaPrincipal()) {
            memoriaVirtual.suspenderProceso(procesos[idProceso]);
            this.suspenderProceso.setEnabled(false);
            this.ponerProcesoListo.setEnabled(true);
            this.bloquearProceso.setEnabled(false);
            procesos[idProceso].setEstado("Suspendido");
            actualizar();
        } else {
            this.cajaMensajes.append("* ALERTA: No hay suficiente espacio en la memoria secundaria para suspender el proceso\n");
        }
    }//GEN-LAST:event_suspenderProcesoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }

    private void actualizarMemoriaPrincipal() {
        this.cajaMemoriaPrincipal.setText("");
        for (int i = 0; i < this.memoriaVirtual.getMemoria().length; i++) {
            if (this.memoriaVirtual.getMemoria()[i].getIdProceso() != null && this.memoriaVirtual.getMemoria()[i].getIdPagina() != null) {
                int direccion = (this.memoriaVirtual.getMemoria()[i].getIdMarco() * memoriaVirtual.getTamañoPagina());
                this.cajaMemoriaPrincipal.append("0x" + Integer.toHexString(direccion) + "   #Marco: " + Integer.toString(this.memoriaVirtual.getMemoria()[i].getIdMarco() + 1) + "  ID Proceso: " + Integer.toString(this.memoriaVirtual.getMemoria()[i].getIdProceso()) + " Nombre del Proceso: " + this.memoriaVirtual.getMemoria()[i].getNombreProceso() + "   Nro. Pagina:   " + Integer.toString(this.memoriaVirtual.getMemoria()[i].getIdPagina()) + "\n");
            } else {
                int direccion = (this.memoriaVirtual.getMemoria()[i].getIdMarco() * memoriaVirtual.getTamañoPagina());
                this.cajaMemoriaPrincipal.append("0x" + Integer.toHexString(direccion) + "   #Marco: " + Integer.toString(this.memoriaVirtual.getMemoria()[i].getIdMarco() + 1) + "  Disponible\n");
            }
        }
    }

    private void actualizarMemoriaSecundaria() {
        this.cajaMemoriaSecundaria.setText("");
        for (int i = 0; i < this.memoriaVirtual.getAlmacenamiento().length; i++) {
            if (this.memoriaVirtual.getAlmacenamiento()[i].getIdProceso() != null && this.memoriaVirtual.getAlmacenamiento()[i].getIdPagina() != null) {
                this.cajaMemoriaSecundaria.append("ID Proceso: " + Integer.toString(this.memoriaVirtual.getAlmacenamiento()[i].getIdProceso()) + " Nombre del Proceso: " + this.memoriaVirtual.getAlmacenamiento()[i].getNombreProceso() + " Nro. Pagina: " + Integer.toString(this.memoriaVirtual.getAlmacenamiento()[i].getIdPagina()) + "\n");
            }
        }
        if (this.cajaMemoriaSecundaria.getText().equals("")) {
            this.cajaMemoriaSecundaria.append("Memoria secundaria vacia");
        }
    }

    private void moverFromMemoriaToAlmacenamiento(int id) {
        int mitad = (this.procesos[id].getCantidadPaginas() / 2);
        if (mitad < 1) {
            mitad = 1;
        }
        if (memoriaVirtual.getMemoriaPrincipal() == 0) {
            try {
                for (int i = 0; i < procesos.length; i++) {
                    if (this.procesos[i] != null) {
                        if (this.colaProcesos.peek() == this.procesos[i].getIdProceso()) {
                            this.memoriaVirtual.quitarPaginasMemoria(procesos[i], mitad);
                            if (this.memoriaVirtual.getContadorPagina() == mitad) {
                                this.memoriaVirtual.setContadorPagina(0);
                                break;
                            } else {
                                this.colaProcesos.poll();
                            }
                        }
                    }
                }
            } catch (NullPointerException e) {
                /*for (int i = 0; i < procesos.length; i++) {
                    if (procesos[i].getPaginasMemoriaPrincipal() == 1) {
                        this.memoriaVirtual.quitarPaginasMemoria(procesos[i], mitad);
                        this.cajaMensajes.append("> Se ha suspendido el proceso de id " + procesos[i].getIdProceso() + " porque la memoria esta demasiado llena de procesos.\n");
                        procesos[i].setEstado("Suspendido");
                        break;
                    }
                }*/
                System.out.println(" " + e);
            }
        }
    }

    private void actualizar() {
        this.labelMemoriaSD.setText(Integer.toString(memoriaVirtual.getMemoriaSecundaria()));
        this.labelMemoriaPD.setText(Integer.toString(memoriaVirtual.getMemoriaPrincipal()));
        this.labelMemoriaPU.setText(Integer.toString(memoriaVirtual.getMemoriaPrincipalTotal() - memoriaVirtual.getMemoriaPrincipal()));
        actualizarProcesos();
        actualizarMemoriaPrincipal();
        actualizarMemoriaSecundaria();
    }

    private void actualizarProcesos() {
        this.cajaProcesos.setText("");
        for (int i = 0; i < contadorProceso; i++) {
            this.cajaProcesos.append("ID Proceso " + Integer.toString(procesos[i].getIdProceso()) + " Nombre: " + procesos[i].getNombre() + " Tamaño: " + Integer.toString(procesos[i].getTamaño()) + " Cantidad de paginas: " + Integer.toString(procesos[i].getCantidadPaginas()) + " Estado: " + procesos[i].getEstado() + " Cantidad de paginas en memoria principal: " + Integer.toString(procesos[i].getPaginasMemoriaPrincipal()) + " Cantidad de paginas en memoria secundaria: " + Integer.toString(procesos[i].getPaginasMemoriaSecundaria()) + "\n");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bloquearProceso;
    private javax.swing.JButton buscarProceso;
    private javax.swing.JTextArea cajaMemoriaPrincipal;
    private javax.swing.JTextArea cajaMemoriaSecundaria;
    private javax.swing.JTextArea cajaMensajes;
    private javax.swing.JTextArea cajaProcesos;
    private javax.swing.JButton crearProceso;
    private javax.swing.JButton eliminarProceso;
    private javax.swing.JButton establecer;
    private javax.swing.JTextField idProceso;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel labelCantMarcosP;
    private javax.swing.JLabel labelCantProcesos;
    private javax.swing.JLabel labelCrearP;
    private javax.swing.JLabel labelEBSP;
    private javax.swing.JLabel labelGestionarP;
    private javax.swing.JLabel labelGestionarP1;
    private javax.swing.JLabel labelGestionarP2;
    private javax.swing.JLabel labelGestionarP3;
    private javax.swing.JLabel labelInformacionGeneral;
    private javax.swing.JLabel labelMemoriaPD;
    private javax.swing.JLabel labelMemoriaPU;
    private javax.swing.JLabel labelMemoriaSD;
    private javax.swing.JLabel labelNombreProceso;
    private javax.swing.JLabel labelTamMP;
    private javax.swing.JLabel labelTamMemoriaP;
    private javax.swing.JLabel labelTamMemoriaS;
    private javax.swing.JLabel labelTamPag;
    private javax.swing.JLabel labelTamPagina;
    private javax.swing.JLabel labelTamañoProceso;
    private javax.swing.JLabel labelTituloInformacion;
    private javax.swing.JLabel labelTituloInformacion1;
    private javax.swing.JTextField nombreProceso;
    private javax.swing.JButton ponerProcesoListo;
    private javax.swing.JButton suspenderProceso;
    private javax.swing.JTextField tamMemoriaP;
    private javax.swing.JTextField tamMemoriaS;
    private javax.swing.JTextField tamPag;
    private javax.swing.JTextField tamProceso;
    // End of variables declaration//GEN-END:variables
}
